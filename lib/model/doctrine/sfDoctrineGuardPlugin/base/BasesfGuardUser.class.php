<?php

/**
 * BasesfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $first_name
 * @property string $last_name
 * @property string $email_address
 * @property string $username
 * @property string $algorithm
 * @property string $salt
 * @property string $password
 * @property boolean $is_active
 * @property boolean $is_super_admin
 * @property timestamp $last_login
 * @property string $phone
 * @property string $phone2
 * @property string $address
 * @property integer $zone_id
 * @property string $profile_image
 * @property integer $fb_user_id
 * @property integer $twitter_user_id
 * @property ShippingZone $ShippingZone
 * @property Doctrine_Collection $Groups
 * @property Doctrine_Collection $Permissions
 * @property Doctrine_Collection $sfGuardLoginHistories
 * @property Doctrine_Collection $sfGuardUserPermission
 * @property Doctrine_Collection $sfGuardUserGroup
 * @property sfGuardRememberKey $RememberKeys
 * @property sfGuardForgotPassword $ForgotPassword
 * @property Doctrine_Collection $RatingContents
 * @property Doctrine_Collection $Feedback
 * @property Doctrine_Collection $ProductComment
 * @property Doctrine_Collection $AddedProducts
 * @property Doctrine_Collection $ShippingOrder
 * @property Doctrine_Collection $MyOrders
 * @property Doctrine_Collection $ShopOrderStatusLogs
 * @property Doctrine_Collection $UpdatedTransactions
 * @property Doctrine_Collection $ShopOrderMessage
 * @property Doctrine_Collection $MyCarts
 * @property Doctrine_Collection $MyCoupons
 * @property Doctrine_Collection $ActivityLogs
 * 
 * @method string                getFirstName()             Returns the current record's "first_name" value
 * @method string                getLastName()              Returns the current record's "last_name" value
 * @method string                getEmailAddress()          Returns the current record's "email_address" value
 * @method string                getUsername()              Returns the current record's "username" value
 * @method string                getAlgorithm()             Returns the current record's "algorithm" value
 * @method string                getSalt()                  Returns the current record's "salt" value
 * @method string                getPassword()              Returns the current record's "password" value
 * @method boolean               getIsActive()              Returns the current record's "is_active" value
 * @method boolean               getIsSuperAdmin()          Returns the current record's "is_super_admin" value
 * @method timestamp             getLastLogin()             Returns the current record's "last_login" value
 * @method string                getPhone()                 Returns the current record's "phone" value
 * @method string                getPhone2()                Returns the current record's "phone2" value
 * @method string                getAddress()               Returns the current record's "address" value
 * @method integer               getZoneId()                Returns the current record's "zone_id" value
 * @method string                getProfileImage()          Returns the current record's "profile_image" value
 * @method integer               getFbUserId()              Returns the current record's "fb_user_id" value
 * @method integer               getTwitterUserId()         Returns the current record's "twitter_user_id" value
 * @method ShippingZone          getShippingZone()          Returns the current record's "ShippingZone" value
 * @method Doctrine_Collection   getGroups()                Returns the current record's "Groups" collection
 * @method Doctrine_Collection   getPermissions()           Returns the current record's "Permissions" collection
 * @method Doctrine_Collection   getSfGuardLoginHistories() Returns the current record's "sfGuardLoginHistories" collection
 * @method Doctrine_Collection   getSfGuardUserPermission() Returns the current record's "sfGuardUserPermission" collection
 * @method Doctrine_Collection   getSfGuardUserGroup()      Returns the current record's "sfGuardUserGroup" collection
 * @method sfGuardRememberKey    getRememberKeys()          Returns the current record's "RememberKeys" value
 * @method sfGuardForgotPassword getForgotPassword()        Returns the current record's "ForgotPassword" value
 * @method Doctrine_Collection   getRatingContents()        Returns the current record's "RatingContents" collection
 * @method Doctrine_Collection   getFeedback()              Returns the current record's "Feedback" collection
 * @method Doctrine_Collection   getProductComment()        Returns the current record's "ProductComment" collection
 * @method Doctrine_Collection   getAddedProducts()         Returns the current record's "AddedProducts" collection
 * @method Doctrine_Collection   getShippingOrder()         Returns the current record's "ShippingOrder" collection
 * @method Doctrine_Collection   getMyOrders()              Returns the current record's "MyOrders" collection
 * @method Doctrine_Collection   getShopOrderStatusLogs()   Returns the current record's "ShopOrderStatusLogs" collection
 * @method Doctrine_Collection   getUpdatedTransactions()   Returns the current record's "UpdatedTransactions" collection
 * @method Doctrine_Collection   getShopOrderMessage()      Returns the current record's "ShopOrderMessage" collection
 * @method Doctrine_Collection   getMyCarts()               Returns the current record's "MyCarts" collection
 * @method Doctrine_Collection   getMyCoupons()             Returns the current record's "MyCoupons" collection
 * @method Doctrine_Collection   getActivityLogs()          Returns the current record's "ActivityLogs" collection
 * @method sfGuardUser           setFirstName()             Sets the current record's "first_name" value
 * @method sfGuardUser           setLastName()              Sets the current record's "last_name" value
 * @method sfGuardUser           setEmailAddress()          Sets the current record's "email_address" value
 * @method sfGuardUser           setUsername()              Sets the current record's "username" value
 * @method sfGuardUser           setAlgorithm()             Sets the current record's "algorithm" value
 * @method sfGuardUser           setSalt()                  Sets the current record's "salt" value
 * @method sfGuardUser           setPassword()              Sets the current record's "password" value
 * @method sfGuardUser           setIsActive()              Sets the current record's "is_active" value
 * @method sfGuardUser           setIsSuperAdmin()          Sets the current record's "is_super_admin" value
 * @method sfGuardUser           setLastLogin()             Sets the current record's "last_login" value
 * @method sfGuardUser           setPhone()                 Sets the current record's "phone" value
 * @method sfGuardUser           setPhone2()                Sets the current record's "phone2" value
 * @method sfGuardUser           setAddress()               Sets the current record's "address" value
 * @method sfGuardUser           setZoneId()                Sets the current record's "zone_id" value
 * @method sfGuardUser           setProfileImage()          Sets the current record's "profile_image" value
 * @method sfGuardUser           setFbUserId()              Sets the current record's "fb_user_id" value
 * @method sfGuardUser           setTwitterUserId()         Sets the current record's "twitter_user_id" value
 * @method sfGuardUser           setShippingZone()          Sets the current record's "ShippingZone" value
 * @method sfGuardUser           setGroups()                Sets the current record's "Groups" collection
 * @method sfGuardUser           setPermissions()           Sets the current record's "Permissions" collection
 * @method sfGuardUser           setSfGuardLoginHistories() Sets the current record's "sfGuardLoginHistories" collection
 * @method sfGuardUser           setSfGuardUserPermission() Sets the current record's "sfGuardUserPermission" collection
 * @method sfGuardUser           setSfGuardUserGroup()      Sets the current record's "sfGuardUserGroup" collection
 * @method sfGuardUser           setRememberKeys()          Sets the current record's "RememberKeys" value
 * @method sfGuardUser           setForgotPassword()        Sets the current record's "ForgotPassword" value
 * @method sfGuardUser           setRatingContents()        Sets the current record's "RatingContents" collection
 * @method sfGuardUser           setFeedback()              Sets the current record's "Feedback" collection
 * @method sfGuardUser           setProductComment()        Sets the current record's "ProductComment" collection
 * @method sfGuardUser           setAddedProducts()         Sets the current record's "AddedProducts" collection
 * @method sfGuardUser           setShippingOrder()         Sets the current record's "ShippingOrder" collection
 * @method sfGuardUser           setMyOrders()              Sets the current record's "MyOrders" collection
 * @method sfGuardUser           setShopOrderStatusLogs()   Sets the current record's "ShopOrderStatusLogs" collection
 * @method sfGuardUser           setUpdatedTransactions()   Sets the current record's "UpdatedTransactions" collection
 * @method sfGuardUser           setShopOrderMessage()      Sets the current record's "ShopOrderMessage" collection
 * @method sfGuardUser           setMyCarts()               Sets the current record's "MyCarts" collection
 * @method sfGuardUser           setMyCoupons()             Sets the current record's "MyCoupons" collection
 * @method sfGuardUser           setActivityLogs()          Sets the current record's "ActivityLogs" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user');
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email_address', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('username', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 128,
             ));
        $this->hasColumn('algorithm', 'string', 128, array(
             'type' => 'string',
             'default' => 'sha1',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('salt', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('password', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('is_super_admin', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('phone', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('phone2', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('address', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('zone_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('profile_image', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('fb_user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('twitter_user_id', 'integer', null, array(
             'type' => 'integer',
             ));


        $this->index('is_active_idx', array(
             'fields' => 
             array(
              0 => 'is_active',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ShippingZone', array(
             'local' => 'zone_id',
             'foreign' => 'id'));

        $this->hasMany('sfGuardGroup as Groups', array(
             'refClass' => 'sfGuardUserGroup',
             'local' => 'user_id',
             'foreign' => 'group_id'));

        $this->hasMany('sfGuardPermission as Permissions', array(
             'refClass' => 'sfGuardUserPermission',
             'local' => 'user_id',
             'foreign' => 'permission_id'));

        $this->hasMany('sfGuardLoginHistory as sfGuardLoginHistories', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUserPermission', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUserGroup', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardRememberKey as RememberKeys', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardForgotPassword as ForgotPassword', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ContentRating as RatingContents', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Feedback', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ProductComment', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ProductStock as AddedProducts', array(
             'local' => 'id',
             'foreign' => 'created_by'));

        $this->hasMany('OrderShipping as ShippingOrder', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ShopOrder as MyOrders', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ShopOrderStatusLog as ShopOrderStatusLogs', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ShopOrderTransaction as UpdatedTransactions', array(
             'local' => 'id',
             'foreign' => 'updated_by'));

        $this->hasMany('ShopOrderMessage', array(
             'local' => 'id',
             'foreign' => 'send_user_id'));

        $this->hasMany('Basket as MyCarts', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ShopCoupon as MyCoupons', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ActivityLog as ActivityLogs', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}