<?php

/**
 * ShopProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class ShopProduct extends BaseShopProduct
{
    public function getPriceTypeSymbol() {
        $types = ShopProductTable::getPriceTypes();
        return $types[$this->getPriceType()];
    }
    
    public function checkValue($value_id)
    {
        $q = ShopProductOptionValueConnTable::getInstance()->createQuery();
        $q->addWhere('product_id = ?', $this->getId());
        $q->addWhere('value_id = ?', $value_id);
        
        return ($q->count())?true:false;
    }
    public function getValue($option_id)
    {
        $q = ShopProductOptionValueConnTable::getInstance()->createQuery();
        $q->addWhere('product_id = ?', $this->getId());
        $q->addWhere('option_id = ?', $option_id);
        
        $relation = $q->fetchOne();
        
        if($relation){
            return ShopOptionValueTable::getInstance()->find($relation->getValueId());
        }{
            return false;
        }
    }
    
    public function getOptions()
    {
        $ids = ShopProductOptionValueConnTable::getOptionIdsByProduct($this->getId());
        
        $q = ShopOptionTable::getInstance()->createQuery('L');
        if(count($ids) > 0)
            $q->whereIn('id', $ids);
        else{
            $q->where('id = 0');
        }
        
        return $q->execute();
    }
    
    public function updateStock()
    {
        $conn = Doctrine_Manager::connection()->getDbh();

        $query = 'SELECT SUM(value) as stock FROM `product_stock` WHERE product_id = '.$this->getId();
        $stock = $conn->query($query)->fetch();
        $stock_count = ($stock['stock'])?$stock['stock']:0;
        $this->stock_count = $stock_count;


        $query = 'SELECT SUM(value) as total_add FROM `product_stock` WHERE is_add = 1 AND product_id = '.$this->getId();
        $stock = $conn->query($query)->fetch();
        $total_add = ($stock['total_add'])?$stock['total_add']:0;
        $this->total_add = $total_add;


        $query = 'SELECT SUM(value) as total_minus FROM `product_stock` WHERE is_add = 0 AND product_id = '.$this->getId();
        $stock = $conn->query($query)->fetch();
        $total_minus = ($stock['total_minus'])?$stock['total_minus']:0;
        $this->total_minus = $total_minus * (-1);

        $this->save();
    }
    
    public function hasStock($qty)
    {
        if($this->stock_count >= $qty )
            return true;
        else
            return false;
    }
    
    public function hasaltStock(ShopOrderItem $item)
    {
        $ps = new ProductStock();
        $ps->product_id = $this->id;
        $ps->value = -$item->quantity;
        $ps->date_when = date('Y-m-d H:i:s');
        $ps->is_add = 0;
        $ps->description = $item->getShopOrder()->invoice_number.'- захиалгын дугаартай захиалганы бараа хасалт хийгдэв.';
        $ps->order_id = $item->order_id;
        $ps->created_by = sfContext::getInstance()->getUser()->getGuardUser()->getId();
        $ps->save();
        
        $this->updateStock();
    }
}
