<?php

/**
 * BaseShopOrder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $invoice_number
 * @property string $invoice_number_report
 * @property integer $status_id
 * @property integer $user_id
 * @property float $shipping_fee
 * @property float $remain_amount
 * @property float $total_amount
 * @property float $product_total_amount
 * @property integer $product_count
 * @property string $ip_address
 * @property sfGuardUser $Customer
 * @property ShopOrderStatus $ShopOrderStatus
 * @property Doctrine_Collection $ProductStock
 * @property Doctrine_Collection $OrderShipping
 * @property Doctrine_Collection $OrderItems
 * @property Doctrine_Collection $ShopOrderStatusLogs
 * @property Doctrine_Collection $ShopOrderTransactions
 * @property Doctrine_Collection $ShopOrderMessage
 * 
 * @method string              getInvoiceNumber()         Returns the current record's "invoice_number" value
 * @method string              getInvoiceNumberReport()   Returns the current record's "invoice_number_report" value
 * @method integer             getStatusId()              Returns the current record's "status_id" value
 * @method integer             getUserId()                Returns the current record's "user_id" value
 * @method float               getShippingFee()           Returns the current record's "shipping_fee" value
 * @method float               getRemainAmount()          Returns the current record's "remain_amount" value
 * @method float               getTotalAmount()           Returns the current record's "total_amount" value
 * @method float               getProductTotalAmount()    Returns the current record's "product_total_amount" value
 * @method integer             getProductCount()          Returns the current record's "product_count" value
 * @method string              getIpAddress()             Returns the current record's "ip_address" value
 * @method sfGuardUser         getCustomer()              Returns the current record's "Customer" value
 * @method ShopOrderStatus     getShopOrderStatus()       Returns the current record's "ShopOrderStatus" value
 * @method Doctrine_Collection getProductStock()          Returns the current record's "ProductStock" collection
 * @method Doctrine_Collection getOrderShipping()         Returns the current record's "OrderShipping" collection
 * @method Doctrine_Collection getOrderItems()            Returns the current record's "OrderItems" collection
 * @method Doctrine_Collection getShopOrderStatusLogs()   Returns the current record's "ShopOrderStatusLogs" collection
 * @method Doctrine_Collection getShopOrderTransactions() Returns the current record's "ShopOrderTransactions" collection
 * @method Doctrine_Collection getShopOrderMessage()      Returns the current record's "ShopOrderMessage" collection
 * @method ShopOrder           setInvoiceNumber()         Sets the current record's "invoice_number" value
 * @method ShopOrder           setInvoiceNumberReport()   Sets the current record's "invoice_number_report" value
 * @method ShopOrder           setStatusId()              Sets the current record's "status_id" value
 * @method ShopOrder           setUserId()                Sets the current record's "user_id" value
 * @method ShopOrder           setShippingFee()           Sets the current record's "shipping_fee" value
 * @method ShopOrder           setRemainAmount()          Sets the current record's "remain_amount" value
 * @method ShopOrder           setTotalAmount()           Sets the current record's "total_amount" value
 * @method ShopOrder           setProductTotalAmount()    Sets the current record's "product_total_amount" value
 * @method ShopOrder           setProductCount()          Sets the current record's "product_count" value
 * @method ShopOrder           setIpAddress()             Sets the current record's "ip_address" value
 * @method ShopOrder           setCustomer()              Sets the current record's "Customer" value
 * @method ShopOrder           setShopOrderStatus()       Sets the current record's "ShopOrderStatus" value
 * @method ShopOrder           setProductStock()          Sets the current record's "ProductStock" collection
 * @method ShopOrder           setOrderShipping()         Sets the current record's "OrderShipping" collection
 * @method ShopOrder           setOrderItems()            Sets the current record's "OrderItems" collection
 * @method ShopOrder           setShopOrderStatusLogs()   Sets the current record's "ShopOrderStatusLogs" collection
 * @method ShopOrder           setShopOrderTransactions() Sets the current record's "ShopOrderTransactions" collection
 * @method ShopOrder           setShopOrderMessage()      Sets the current record's "ShopOrderMessage" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseShopOrder extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('shop_order');
        $this->hasColumn('invoice_number', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('invoice_number_report', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('status_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('shipping_fee', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('remain_amount', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('total_amount', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('product_total_amount', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('product_count', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             ));
        $this->hasColumn('ip_address', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as Customer', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('ShopOrderStatus', array(
             'local' => 'status_id',
             'foreign' => 'id'));

        $this->hasMany('ProductStock', array(
             'local' => 'id',
             'foreign' => 'order_id'));

        $this->hasMany('OrderShipping', array(
             'local' => 'id',
             'foreign' => 'order_id'));

        $this->hasMany('ShopOrderItem as OrderItems', array(
             'local' => 'id',
             'foreign' => 'order_id'));

        $this->hasMany('ShopOrderStatusLog as ShopOrderStatusLogs', array(
             'local' => 'id',
             'foreign' => 'order_id'));

        $this->hasMany('ShopOrderTransaction as ShopOrderTransactions', array(
             'local' => 'id',
             'foreign' => 'order_id'));

        $this->hasMany('ShopOrderMessage', array(
             'local' => 'id',
             'foreign' => 'order_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}