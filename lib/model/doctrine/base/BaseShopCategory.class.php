<?php

/**
 * BaseShopCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property integer $parent_id
 * @property integer $sort_order
 * @property Doctrine_Collection $Options
 * @property ShopCategory $Parent
 * @property Doctrine_Collection $Childs
 * @property Doctrine_Collection $CategoryOptions
 * @property Doctrine_Collection $ShopProduct
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method string              getName()            Returns the current record's "name" value
 * @method string              getDescription()     Returns the current record's "description" value
 * @method integer             getParentId()        Returns the current record's "parent_id" value
 * @method integer             getSortOrder()       Returns the current record's "sort_order" value
 * @method Doctrine_Collection getOptions()         Returns the current record's "Options" collection
 * @method ShopCategory        getParent()          Returns the current record's "Parent" value
 * @method Doctrine_Collection getChilds()          Returns the current record's "Childs" collection
 * @method Doctrine_Collection getCategoryOptions() Returns the current record's "CategoryOptions" collection
 * @method Doctrine_Collection getShopProduct()     Returns the current record's "ShopProduct" collection
 * @method ShopCategory        setId()              Sets the current record's "id" value
 * @method ShopCategory        setName()            Sets the current record's "name" value
 * @method ShopCategory        setDescription()     Sets the current record's "description" value
 * @method ShopCategory        setParentId()        Sets the current record's "parent_id" value
 * @method ShopCategory        setSortOrder()       Sets the current record's "sort_order" value
 * @method ShopCategory        setOptions()         Sets the current record's "Options" collection
 * @method ShopCategory        setParent()          Sets the current record's "Parent" value
 * @method ShopCategory        setChilds()          Sets the current record's "Childs" collection
 * @method ShopCategory        setCategoryOptions() Sets the current record's "CategoryOptions" collection
 * @method ShopCategory        setShopProduct()     Sets the current record's "ShopProduct" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseShopCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('shop_category');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('parent_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('sort_order', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ShopOption as Options', array(
             'refClass' => 'ShopCategoryOptionConn',
             'local' => 'category_id',
             'foreign' => 'option_id'));

        $this->hasOne('ShopCategory as Parent', array(
             'local' => 'parent_id',
             'foreign' => 'id'));

        $this->hasMany('ShopCategory as Childs', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $this->hasMany('ShopCategoryOptionConn as CategoryOptions', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $this->hasMany('ShopProduct', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'name',
              1 => 'description',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}