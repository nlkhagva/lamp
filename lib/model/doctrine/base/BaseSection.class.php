<?php

/**
 * BaseSection
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property boolean $published
 * @property string $access
 * @property integer $type_id
 * @property integer $order_id
 * @property integer $created_by
 * @property integer $updated_by
 * @property SectionType $SectionType
 * @property Doctrine_Collection $Galleries
 * @property Doctrine_Collection $Contents
 * @property Doctrine_Collection $Categories
 * @property Doctrine_Collection $Vidoes
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method boolean             getPublished()   Returns the current record's "published" value
 * @method string              getAccess()      Returns the current record's "access" value
 * @method integer             getTypeId()      Returns the current record's "type_id" value
 * @method integer             getOrderId()     Returns the current record's "order_id" value
 * @method integer             getCreatedBy()   Returns the current record's "created_by" value
 * @method integer             getUpdatedBy()   Returns the current record's "updated_by" value
 * @method SectionType         getSectionType() Returns the current record's "SectionType" value
 * @method Doctrine_Collection getGalleries()   Returns the current record's "Galleries" collection
 * @method Doctrine_Collection getContents()    Returns the current record's "Contents" collection
 * @method Doctrine_Collection getCategories()  Returns the current record's "Categories" collection
 * @method Doctrine_Collection getVidoes()      Returns the current record's "Vidoes" collection
 * @method Section             setId()          Sets the current record's "id" value
 * @method Section             setName()        Sets the current record's "name" value
 * @method Section             setDescription() Sets the current record's "description" value
 * @method Section             setPublished()   Sets the current record's "published" value
 * @method Section             setAccess()      Sets the current record's "access" value
 * @method Section             setTypeId()      Sets the current record's "type_id" value
 * @method Section             setOrderId()     Sets the current record's "order_id" value
 * @method Section             setCreatedBy()   Sets the current record's "created_by" value
 * @method Section             setUpdatedBy()   Sets the current record's "updated_by" value
 * @method Section             setSectionType() Sets the current record's "SectionType" value
 * @method Section             setGalleries()   Sets the current record's "Galleries" collection
 * @method Section             setContents()    Sets the current record's "Contents" collection
 * @method Section             setCategories()  Sets the current record's "Categories" collection
 * @method Section             setVidoes()      Sets the current record's "Vidoes" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSection extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('section');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('published', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => '1',
             ));
        $this->hasColumn('access', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('type_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('order_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_by', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('updated_by', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SectionType', array(
             'local' => 'type_id',
             'foreign' => 'id'));

        $this->hasMany('Gallery as Galleries', array(
             'local' => 'id',
             'foreign' => 'section_id'));

        $this->hasMany('Content as Contents', array(
             'local' => 'id',
             'foreign' => 'section_id'));

        $this->hasMany('Category as Categories', array(
             'local' => 'id',
             'foreign' => 'section_id'));

        $this->hasMany('Video as Vidoes', array(
             'local' => 'id',
             'foreign' => 'section_id'));

        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'name',
              1 => 'description',
             ),
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($i18n0);
        $this->actAs($timestampable0);
    }
}