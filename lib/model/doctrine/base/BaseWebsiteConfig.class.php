<?php

/**
 * BaseWebsiteConfig
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $company_name
 * @property string $logo
 * @property string $company_slogan
 * @property string $phone
 * @property string $fax
 * @property string $email
 * @property string $address
 * @property string $google_map
 * @property string $domain
 * @property string $facebook_page
 * @property string $twitter
 * @property string $google_plus
 * @property string $linkedin
 * 
 * @method integer       getId()             Returns the current record's "id" value
 * @method string        getCompanyName()    Returns the current record's "company_name" value
 * @method string        getLogo()           Returns the current record's "logo" value
 * @method string        getCompanySlogan()  Returns the current record's "company_slogan" value
 * @method string        getPhone()          Returns the current record's "phone" value
 * @method string        getFax()            Returns the current record's "fax" value
 * @method string        getEmail()          Returns the current record's "email" value
 * @method string        getAddress()        Returns the current record's "address" value
 * @method string        getGoogleMap()      Returns the current record's "google_map" value
 * @method string        getDomain()         Returns the current record's "domain" value
 * @method string        getFacebookPage()   Returns the current record's "facebook_page" value
 * @method string        getTwitter()        Returns the current record's "twitter" value
 * @method string        getGooglePlus()     Returns the current record's "google_plus" value
 * @method string        getLinkedin()       Returns the current record's "linkedin" value
 * @method WebsiteConfig setId()             Sets the current record's "id" value
 * @method WebsiteConfig setCompanyName()    Sets the current record's "company_name" value
 * @method WebsiteConfig setLogo()           Sets the current record's "logo" value
 * @method WebsiteConfig setCompanySlogan()  Sets the current record's "company_slogan" value
 * @method WebsiteConfig setPhone()          Sets the current record's "phone" value
 * @method WebsiteConfig setFax()            Sets the current record's "fax" value
 * @method WebsiteConfig setEmail()          Sets the current record's "email" value
 * @method WebsiteConfig setAddress()        Sets the current record's "address" value
 * @method WebsiteConfig setGoogleMap()      Sets the current record's "google_map" value
 * @method WebsiteConfig setDomain()         Sets the current record's "domain" value
 * @method WebsiteConfig setFacebookPage()   Sets the current record's "facebook_page" value
 * @method WebsiteConfig setTwitter()        Sets the current record's "twitter" value
 * @method WebsiteConfig setGooglePlus()     Sets the current record's "google_plus" value
 * @method WebsiteConfig setLinkedin()       Sets the current record's "linkedin" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWebsiteConfig extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('website_config');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('company_name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('logo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('company_slogan', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('phone', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('fax', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('email', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('address', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('google_map', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('domain', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('facebook_page', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('twitter', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('google_plus', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('linkedin', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'company_name',
              1 => 'address',
              2 => 'company_slogan',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}