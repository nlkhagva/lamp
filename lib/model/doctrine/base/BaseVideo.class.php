<?php

/**
 * BaseVideo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property string $description
 * @property integer $section_id
 * @property integer $category_id
 * @property string $image
 * @property string $file_name
 * @property boolean $is_embed
 * @property string $embed_src
 * @property integer $order_id
 * @property boolean $published
 * @property integer $created_by
 * @property integer $updated_by
 * @property Category $Category
 * @property Section $Section
 * 
 * @method integer  getId()          Returns the current record's "id" value
 * @method string   getTitle()       Returns the current record's "title" value
 * @method string   getDescription() Returns the current record's "description" value
 * @method integer  getSectionId()   Returns the current record's "section_id" value
 * @method integer  getCategoryId()  Returns the current record's "category_id" value
 * @method string   getImage()       Returns the current record's "image" value
 * @method string   getFileName()    Returns the current record's "file_name" value
 * @method boolean  getIsEmbed()     Returns the current record's "is_embed" value
 * @method string   getEmbedSrc()    Returns the current record's "embed_src" value
 * @method integer  getOrderId()     Returns the current record's "order_id" value
 * @method boolean  getPublished()   Returns the current record's "published" value
 * @method integer  getCreatedBy()   Returns the current record's "created_by" value
 * @method integer  getUpdatedBy()   Returns the current record's "updated_by" value
 * @method Category getCategory()    Returns the current record's "Category" value
 * @method Section  getSection()     Returns the current record's "Section" value
 * @method Video    setId()          Sets the current record's "id" value
 * @method Video    setTitle()       Sets the current record's "title" value
 * @method Video    setDescription() Sets the current record's "description" value
 * @method Video    setSectionId()   Sets the current record's "section_id" value
 * @method Video    setCategoryId()  Sets the current record's "category_id" value
 * @method Video    setImage()       Sets the current record's "image" value
 * @method Video    setFileName()    Sets the current record's "file_name" value
 * @method Video    setIsEmbed()     Sets the current record's "is_embed" value
 * @method Video    setEmbedSrc()    Sets the current record's "embed_src" value
 * @method Video    setOrderId()     Sets the current record's "order_id" value
 * @method Video    setPublished()   Sets the current record's "published" value
 * @method Video    setCreatedBy()   Sets the current record's "created_by" value
 * @method Video    setUpdatedBy()   Sets the current record's "updated_by" value
 * @method Video    setCategory()    Sets the current record's "Category" value
 * @method Video    setSection()     Sets the current record's "Section" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVideo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('video');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('section_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('file_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_embed', 'boolean', null, array(
             'type' => 'boolean',
             'default' => '1',
             ));
        $this->hasColumn('embed_src', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('order_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('published', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => '1',
             ));
        $this->hasColumn('created_by', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('updated_by', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));

        $this->hasOne('Section', array(
             'local' => 'section_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'description',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}