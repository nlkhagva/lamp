<?php

/**
 * BaseShopOrderItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $order_id
 * @property integer $quantity
 * @property integer $product_id
 * @property float $unit_price
 * @property float $total_price
 * @property string $sale_log
 * @property ShopOrder $ShopOrder
 * @property ShopProduct $ShopProduct
 * 
 * @method integer       getOrderId()     Returns the current record's "order_id" value
 * @method integer       getQuantity()    Returns the current record's "quantity" value
 * @method integer       getProductId()   Returns the current record's "product_id" value
 * @method float         getUnitPrice()   Returns the current record's "unit_price" value
 * @method float         getTotalPrice()  Returns the current record's "total_price" value
 * @method string        getSaleLog()     Returns the current record's "sale_log" value
 * @method ShopOrder     getShopOrder()   Returns the current record's "ShopOrder" value
 * @method ShopProduct   getShopProduct() Returns the current record's "ShopProduct" value
 * @method ShopOrderItem setOrderId()     Sets the current record's "order_id" value
 * @method ShopOrderItem setQuantity()    Sets the current record's "quantity" value
 * @method ShopOrderItem setProductId()   Sets the current record's "product_id" value
 * @method ShopOrderItem setUnitPrice()   Sets the current record's "unit_price" value
 * @method ShopOrderItem setTotalPrice()  Sets the current record's "total_price" value
 * @method ShopOrderItem setSaleLog()     Sets the current record's "sale_log" value
 * @method ShopOrderItem setShopOrder()   Sets the current record's "ShopOrder" value
 * @method ShopOrderItem setShopProduct() Sets the current record's "ShopProduct" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseShopOrderItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('shop_order_item');
        $this->hasColumn('order_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('quantity', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('product_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('unit_price', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('total_price', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('sale_log', 'string', 125, array(
             'type' => 'string',
             'length' => 125,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ShopOrder', array(
             'local' => 'order_id',
             'foreign' => 'id'));

        $this->hasOne('ShopProduct', array(
             'local' => 'product_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}