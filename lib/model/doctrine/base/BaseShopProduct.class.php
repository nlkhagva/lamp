<?php

/**
 * BaseShopProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $category_id
 * @property string $title
 * @property string $code
 * @property string $intro_text
 * @property string $content
 * @property integer $cover_photo_id
 * @property float $price
 * @property integer $price_type
 * @property string $product_code
 * @property integer $stock_count
 * @property integer $total_add
 * @property integer $total_minus
 * @property string $created_by
 * @property boolean $is_active
 * @property boolean $is_featured
 * @property boolean $is_submit
 * @property boolean $is_new
 * @property integer $related_content
 * @property Doctrine_Collection $OptionValues
 * @property ShopCategory $Category
 * @property ShopProductImage $CoverPhoto
 * @property Content $Content
 * @property Doctrine_Collection $ShopProductOptionValueConn
 * @property Doctrine_Collection $Photos
 * @property Doctrine_Collection $ProductComment
 * @property Doctrine_Collection $ProductStock
 * @property Doctrine_Collection $ShopOrderItem
 * @property Doctrine_Collection $BasketItem
 * @property ProductToProduct $ProductToProduct2
 * @property Doctrine_Collection $ProductToContent
 * @property Doctrine_Collection $ShopProductSale
 * @property Doctrine_Collection $ShopProductBonus
 * 
 * @method integer             getId()                         Returns the current record's "id" value
 * @method integer             getCategoryId()                 Returns the current record's "category_id" value
 * @method string              getTitle()                      Returns the current record's "title" value
 * @method string              getCode()                       Returns the current record's "code" value
 * @method string              getIntroText()                  Returns the current record's "intro_text" value
 * @method string              getContent()                    Returns the current record's "content" value
 * @method integer             getCoverPhotoId()               Returns the current record's "cover_photo_id" value
 * @method float               getPrice()                      Returns the current record's "price" value
 * @method integer             getPriceType()                  Returns the current record's "price_type" value
 * @method string              getProductCode()                Returns the current record's "product_code" value
 * @method integer             getStockCount()                 Returns the current record's "stock_count" value
 * @method integer             getTotalAdd()                   Returns the current record's "total_add" value
 * @method integer             getTotalMinus()                 Returns the current record's "total_minus" value
 * @method string              getCreatedBy()                  Returns the current record's "created_by" value
 * @method boolean             getIsActive()                   Returns the current record's "is_active" value
 * @method boolean             getIsFeatured()                 Returns the current record's "is_featured" value
 * @method boolean             getIsSubmit()                   Returns the current record's "is_submit" value
 * @method boolean             getIsNew()                      Returns the current record's "is_new" value
 * @method integer             getRelatedContent()             Returns the current record's "related_content" value
 * @method Doctrine_Collection getOptionValues()               Returns the current record's "OptionValues" collection
 * @method ShopCategory        getCategory()                   Returns the current record's "Category" value
 * @method ShopProductImage    getCoverPhoto()                 Returns the current record's "CoverPhoto" value
 * @method Content             getContent()                    Returns the current record's "Content" value
 * @method Doctrine_Collection getShopProductOptionValueConn() Returns the current record's "ShopProductOptionValueConn" collection
 * @method Doctrine_Collection getPhotos()                     Returns the current record's "Photos" collection
 * @method Doctrine_Collection getProductComment()             Returns the current record's "ProductComment" collection
 * @method Doctrine_Collection getProductStock()               Returns the current record's "ProductStock" collection
 * @method Doctrine_Collection getShopOrderItem()              Returns the current record's "ShopOrderItem" collection
 * @method Doctrine_Collection getBasketItem()                 Returns the current record's "BasketItem" collection
 * @method ProductToProduct    getProductToProduct2()          Returns the current record's "ProductToProduct2" value
 * @method Doctrine_Collection getProductToContent()           Returns the current record's "ProductToContent" collection
 * @method Doctrine_Collection getShopProductSale()            Returns the current record's "ShopProductSale" collection
 * @method Doctrine_Collection getShopProductBonus()           Returns the current record's "ShopProductBonus" collection
 * @method ShopProduct         setId()                         Sets the current record's "id" value
 * @method ShopProduct         setCategoryId()                 Sets the current record's "category_id" value
 * @method ShopProduct         setTitle()                      Sets the current record's "title" value
 * @method ShopProduct         setCode()                       Sets the current record's "code" value
 * @method ShopProduct         setIntroText()                  Sets the current record's "intro_text" value
 * @method ShopProduct         setContent()                    Sets the current record's "content" value
 * @method ShopProduct         setCoverPhotoId()               Sets the current record's "cover_photo_id" value
 * @method ShopProduct         setPrice()                      Sets the current record's "price" value
 * @method ShopProduct         setPriceType()                  Sets the current record's "price_type" value
 * @method ShopProduct         setProductCode()                Sets the current record's "product_code" value
 * @method ShopProduct         setStockCount()                 Sets the current record's "stock_count" value
 * @method ShopProduct         setTotalAdd()                   Sets the current record's "total_add" value
 * @method ShopProduct         setTotalMinus()                 Sets the current record's "total_minus" value
 * @method ShopProduct         setCreatedBy()                  Sets the current record's "created_by" value
 * @method ShopProduct         setIsActive()                   Sets the current record's "is_active" value
 * @method ShopProduct         setIsFeatured()                 Sets the current record's "is_featured" value
 * @method ShopProduct         setIsSubmit()                   Sets the current record's "is_submit" value
 * @method ShopProduct         setIsNew()                      Sets the current record's "is_new" value
 * @method ShopProduct         setRelatedContent()             Sets the current record's "related_content" value
 * @method ShopProduct         setOptionValues()               Sets the current record's "OptionValues" collection
 * @method ShopProduct         setCategory()                   Sets the current record's "Category" value
 * @method ShopProduct         setCoverPhoto()                 Sets the current record's "CoverPhoto" value
 * @method ShopProduct         setContent()                    Sets the current record's "Content" value
 * @method ShopProduct         setShopProductOptionValueConn() Sets the current record's "ShopProductOptionValueConn" collection
 * @method ShopProduct         setPhotos()                     Sets the current record's "Photos" collection
 * @method ShopProduct         setProductComment()             Sets the current record's "ProductComment" collection
 * @method ShopProduct         setProductStock()               Sets the current record's "ProductStock" collection
 * @method ShopProduct         setShopOrderItem()              Sets the current record's "ShopOrderItem" collection
 * @method ShopProduct         setBasketItem()                 Sets the current record's "BasketItem" collection
 * @method ShopProduct         setProductToProduct2()          Sets the current record's "ProductToProduct2" value
 * @method ShopProduct         setProductToContent()           Sets the current record's "ProductToContent" collection
 * @method ShopProduct         setShopProductSale()            Sets the current record's "ShopProductSale" collection
 * @method ShopProduct         setShopProductBonus()           Sets the current record's "ShopProductBonus" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseShopProduct extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('shop_product');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('code', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('intro_text', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('cover_photo_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('price', 'float', null, array(
             'type' => 'float',
             'length' => '',
             ));
        $this->hasColumn('price_type', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('product_code', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('stock_count', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('total_add', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('total_minus', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('created_by', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('is_featured', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_submit', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_new', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('related_content', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ShopOptionValue as OptionValues', array(
             'refClass' => 'ShopProductOptionValueConn',
             'local' => 'product_id',
             'foreign' => 'value_id'));

        $this->hasOne('ShopCategory as Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));

        $this->hasOne('ShopProductImage as CoverPhoto', array(
             'local' => 'cover_photo_id',
             'foreign' => 'id'));

        $this->hasOne('Content', array(
             'local' => 'related_content',
             'foreign' => 'id'));

        $this->hasMany('ShopProductOptionValueConn', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ShopProductImage as Photos', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductComment', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductStock', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ShopOrderItem', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('BasketItem', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasOne('ProductToProduct as ProductToProduct2', array(
             'local' => 'id',
             'foreign' => 'relation_product_id'));

        $this->hasMany('ProductToContent', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ShopProductSale', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ShopProductBonus', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'intro_text',
              2 => 'content',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}