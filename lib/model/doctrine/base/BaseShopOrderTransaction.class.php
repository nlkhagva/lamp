<?php

/**
 * BaseShopOrderTransaction
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $order_id
 * @property integer $status_id
 * @property integer $user_id
 * @property string $code
 * @property float $amount
 * @property string $exchange
 * @property string $description
 * @property string $ip_address
 * @property integer $created_by
 * @property integer $updated_by
 * @property ShopOrder $ShopOrder
 * @property sfGuardUser $UpdateCustomer
 * 
 * @method integer              getOrderId()        Returns the current record's "order_id" value
 * @method integer              getStatusId()       Returns the current record's "status_id" value
 * @method integer              getUserId()         Returns the current record's "user_id" value
 * @method string               getCode()           Returns the current record's "code" value
 * @method float                getAmount()         Returns the current record's "amount" value
 * @method string               getExchange()       Returns the current record's "exchange" value
 * @method string               getDescription()    Returns the current record's "description" value
 * @method string               getIpAddress()      Returns the current record's "ip_address" value
 * @method integer              getCreatedBy()      Returns the current record's "created_by" value
 * @method integer              getUpdatedBy()      Returns the current record's "updated_by" value
 * @method ShopOrder            getShopOrder()      Returns the current record's "ShopOrder" value
 * @method sfGuardUser          getUpdateCustomer() Returns the current record's "UpdateCustomer" value
 * @method ShopOrderTransaction setOrderId()        Sets the current record's "order_id" value
 * @method ShopOrderTransaction setStatusId()       Sets the current record's "status_id" value
 * @method ShopOrderTransaction setUserId()         Sets the current record's "user_id" value
 * @method ShopOrderTransaction setCode()           Sets the current record's "code" value
 * @method ShopOrderTransaction setAmount()         Sets the current record's "amount" value
 * @method ShopOrderTransaction setExchange()       Sets the current record's "exchange" value
 * @method ShopOrderTransaction setDescription()    Sets the current record's "description" value
 * @method ShopOrderTransaction setIpAddress()      Sets the current record's "ip_address" value
 * @method ShopOrderTransaction setCreatedBy()      Sets the current record's "created_by" value
 * @method ShopOrderTransaction setUpdatedBy()      Sets the current record's "updated_by" value
 * @method ShopOrderTransaction setShopOrder()      Sets the current record's "ShopOrder" value
 * @method ShopOrderTransaction setUpdateCustomer() Sets the current record's "UpdateCustomer" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseShopOrderTransaction extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('shop_order_transaction');
        $this->hasColumn('order_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('code', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('amount', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('exchange', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('ip_address', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('created_by', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('updated_by', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ShopOrder', array(
             'local' => 'order_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UpdateCustomer', array(
             'local' => 'updated_by',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}