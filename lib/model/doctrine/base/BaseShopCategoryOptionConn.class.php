<?php

/**
 * BaseShopCategoryOptionConn
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category_id
 * @property integer $option_id
 * @property ShopCategory $Category
 * @property ShopOption $Option
 * 
 * @method integer                getCategoryId()  Returns the current record's "category_id" value
 * @method integer                getOptionId()    Returns the current record's "option_id" value
 * @method ShopCategory           getCategory()    Returns the current record's "Category" value
 * @method ShopOption             getOption()      Returns the current record's "Option" value
 * @method ShopCategoryOptionConn setCategoryId()  Sets the current record's "category_id" value
 * @method ShopCategoryOptionConn setOptionId()    Sets the current record's "option_id" value
 * @method ShopCategoryOptionConn setCategory()    Sets the current record's "Category" value
 * @method ShopCategoryOptionConn setOption()      Sets the current record's "Option" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseShopCategoryOptionConn extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('shop_category_option_conn');
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('option_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ShopCategory as Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('ShopOption as Option', array(
             'local' => 'option_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}